<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--开启ioc的扫描；MVC中只扫描controller-->
    <context:component-scan base-package="com.ssm.controller"></context:component-scan>

    <!--配置视图解析器-->
    <bean id="viewResolver"
          class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean
                            class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--设置/所匹配的视图
            注意：使用view-controller后，要使用mvc的注解驱动，否则其他的请求映射都会失效-->
    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>

    <!--在web.xml中，设置DispatcherServlet为默认的Servlet视图处理器；-->
    <!--该处理器只会处理请求，不会处理静态资源（如：js、css等）-->
    <!--所以在这里设置开启默认的Servlet处理器；-->
    <!--当应用程序处理请求时，会先通过DispatcherServlet来匹配请求，-->
    <!--当匹配不上时，会交给默认的Servlet处理器（DefaultServlet）进行匹配，-->
    <!--若还是匹配不上，则报错；-->
    <!--使用default-servlet-handler时，也要使用mvc注解驱动-->
    <mvc:default-servlet-handler />

    <!--启动mvc的注解驱动-->
    <mvc:annotation-driven />

    <!--配置文件上传的解析对象-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>


</beans>